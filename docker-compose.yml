services:
  app:
    build: .
    container_name: timelycapsule-backend
    ports:
      - "3000:${PORT:-3000}"
    env_file:
      - .env
    environment:
      - HUSKY=0
      - DB_NAME=${DB_NAME}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - DB_CONNECTION_STRING=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@db:27017/${DB_NAME}?authSource=admin
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - timelycapsule-net

  db:
    image: mongo:6.0
    container_name: timelycapsule-db
    ports:
      - "27017:27017"
    volumes:
      - db_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

    env_file:
      - .env
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    command: ["docker-entrypoint.sh", "mongod"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - timelycapsule-net

volumes:
  db_data:

networks:
  timelycapsule-net:
    driver: bridge
